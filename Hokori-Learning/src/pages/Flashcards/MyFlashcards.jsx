import React, { useState } from "react";
import styles from "./MyFlashcards.module.scss";
import DeckCard from "./components/DeckCard";
import StudyModal from "./components/StudyModal";
import CreateDeckModal from "./components/CreateDeckModal";

const MyFlashcards = () => {
  // ‚ö†Ô∏è MOCK DATA ‚Äî s·∫Ω x√≥a khi g·∫Øn API th·∫≠t
  const decks = [
    {
      id: 1,
      tenBo: "T·ª´ v·ª±ng JLPT N4",
      capDo: "N4",
      tongThe: 45,
      tienDo: 80,
      lanCuoi: "2 gi·ªù tr∆∞·ªõc",
      mau: "xanh",
    },
    {
      id: 2,
      tenBo: "Kanji c∆° b·∫£n",
      capDo: "N3",
      tongThe: 80,
      tienDo: 52,
      lanCuoi: "H√¥m qua",
      mau: "xanhLa",
    },
    {
      id: 3,
      tenBo: "C·ª•m giao ti·∫øp h√†ng ng√†y",
      capDo: "N5",
      tongThe: 30,
      tienDo: 95,
      lanCuoi: "30 ph√∫t tr∆∞·ªõc",
      mau: "tim",
    },
  ];

  // ‚úÖ state ƒë·ªïi sang ti·∫øng Anh
  const [selectedDeck, setSelectedDeck] = useState(null);
  const [showCreate, setShowCreate] = useState(false); // state m·ªü modal t·∫°o m·ªõi

  // ‚úÖ Khi h·ªçc vi√™n b·∫•m ‚ÄúT·∫°o b·ªô th·∫ª‚Äù
  const handleCreateDeck = (formData) => {
    console.log("B·ªô th·∫ª m·ªõi ƒë∆∞·ª£c t·∫°o:", formData);
    // üîπ Sau n√†y g·ªçi API POST /api/flashcards
    setShowCreate(false);
  };

  return (
    <div className={styles.wrapper}>
      {/* Header */}
      <div className={styles.header}>
        <div>
          <h1>B·ªô th·∫ª ghi nh·ªõ c·ªßa t√¥i</h1>
          <p className={styles.sub}>
            √în t·∫≠p t·ª´ v·ª±ng, kanji v√† c·ª•m c√¢u ti·∫øng Nh·∫≠t c·ªßa ri√™ng b·∫°n
          </p>
        </div>

        {/* N√∫t m·ªü modal */}
        <button className={styles.addBtn} onClick={() => setShowCreate(true)}>
          <i className="fa-solid fa-plus"></i> T·∫°o b·ªô m·ªõi
        </button>
      </div>

      {/* Th·ªëng k√™ */}
      <div className={styles.stats}>
        <div>
          <span>3</span>
          <p>B·ªô th·∫ª</p>
        </div>
        <div>
          <span>155</span>
          <p>T·ªïng s·ªë th·∫ª</p>
        </div>
        <div>
          <span>20</span>
          <p>ƒê√£ √¥n h√¥m nay</p>
        </div>
        <div>
          <span>7</span>
          <p>Chu·ªói ng√†y h·ªçc</p>
        </div>
      </div>

      {/* B·ªô l·ªçc */}
      <div className={styles.filters}>
        <input placeholder="T√¨m ki·∫øm b·ªô th·∫ª..." />
        <select>
          <option>T·∫•t c·∫£ c·∫•p ƒë·ªô JLPT</option>
          <option>JLPT N5</option>
          <option>JLPT N4</option>
          <option>JLPT N3</option>
          <option>JLPT N2</option>
          <option>JLPT N1</option>
        </select>
        <select>
          <option>T·∫•t c·∫£ lo·∫°i th·∫ª</option>
          <option>T·ª´ v·ª±ng</option>
          <option>Kanji</option>
          <option>C·ª•m t·ª´</option>
        </select>
      </div>

      {/* Danh s√°ch b·ªô th·∫ª */}
      <div className={styles.grid}>
        {decks.map((deck) => (
          <DeckCard
            key={deck.id}
            deck={deck}
            onStudy={() => setSelectedDeck(deck)}
          />
        ))}
      </div>

      {/* Modal h·ªçc th·∫ª */}
      {selectedDeck && (
        <StudyModal deck={selectedDeck} onClose={() => setSelectedDeck(null)} />
      )}

      {/* Modal t·∫°o b·ªô th·∫ª m·ªõi */}
      {showCreate && (
        <CreateDeckModal
          onClose={() => setShowCreate(false)}
          onCreate={handleCreateDeck}
        />
      )}
    </div>
  );
};

export default MyFlashcards;
