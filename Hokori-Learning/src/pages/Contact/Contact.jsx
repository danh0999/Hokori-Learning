import React, { useState } from "react";
import styles from "./styles.module.scss";
import api from "../../configs/axios";
import { Button } from "../../components/Button/Button";
import { toast } from "react-toastify";

export const Contact = () => {
  const [formData, setFormData] = useState({
    name: "",
    email: "",
    message: "",
  });

  const [errors, setErrors] = useState({
    name: "",
    email: "",
    message: "",
  });

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData((prev) => ({ ...prev, [name]: value }));

    let msg = "";

    // üîπ Ki·ªÉm tra t√™n (ch·ªâ ch·ªØ, c√≥ th·ªÉ c√≥ d·∫•u v√† kho·∫£ng tr·∫Øng)
    if (name === "name") {
      const nameRegex = /^[\p{L}\s]+$/u; // h·ªó tr·ª£ ti·∫øng Vi·ªát
      if (!value.trim()) msg = "Vui l√≤ng nh·∫≠p h·ªç v√† t√™n";
      else if (!nameRegex.test(value.trim()))
        msg = "H·ªç v√† t√™n kh√¥ng h·ª£p l·ªá (ch·ªâ ƒë∆∞·ª£c ch·ª©a ch·ªØ c√°i)";
      else if (value.trim().length < 2)
        msg = "H·ªç v√† t√™n qu√° ng·∫Øn (t·ªëi thi·ªÉu 2 k√Ω t·ª±)";
    }

    // üîπ Ki·ªÉm tra email
    if (name === "email") {
      const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      if (!value.trim()) msg = "Vui l√≤ng nh·∫≠p email";
      else if (!emailRegex.test(value)) msg = "Email kh√¥ng h·ª£p l·ªá";
    }

    // üîπ Ki·ªÉm tra message
    if (name === "message") {
      if (!value.trim()) msg = "Vui l√≤ng nh·∫≠p n·ªôi dung l·ªùi nh·∫Øn";
      else if (value.trim().length < 10)
        msg = "N·ªôi dung l·ªùi nh·∫Øn qu√° ng·∫Øn (t·ªëi thi·ªÉu 10 k√Ω t·ª±)";
    }

    setErrors((prev) => ({ ...prev, [name]: msg }));
  };

  const validate = () => {
    const newErrors = {};

    if (!formData.name.trim()) {
      newErrors.name = "Vui l√≤ng nh·∫≠p h·ªç v√† t√™n";
    }

    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!formData.email.trim()) {
      newErrors.email = "Vui l√≤ng nh·∫≠p email";
    } else if (!emailRegex.test(formData.email)) {
      newErrors.email = "Email kh√¥ng h·ª£p l·ªá";
    }

    if (!formData.message.trim()) {
      newErrors.message = "Vui l√≤ng nh·∫≠p n·ªôi dung l·ªùi nh·∫Øn";
    }

    setErrors(newErrors);
    return Object.keys(newErrors).length === 0;
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    if (validate()) {
      try {
        await api.post("contact", {
          fullName: formData.name,
          email: formData.email,
          message: formData.message,
        });

        toast.success(
          "üéâ C·∫£m ∆°n b·∫°n! L·ªùi nh·∫Øn ƒë√£ ƒë∆∞·ª£c g·ª≠i ƒë·∫øn ƒë·ªôi ng≈© Hokori."
        );

        setFormData({ name: "", email: "", message: "" });
        setErrors({ name: "", email: "", message: "" });
      } catch (error) {
        console.error("L·ªói g·ª≠i l·ªùi nh·∫Øn:", error);

        const errorMsg =
          error.response?.data?.message ||
          error.response?.data ||
          "C√≥ l·ªói x·∫£y ra. Vui l√≤ng th·ª≠ l·∫°i sau.";

        toast.error(`‚ùå ${errorMsg}`);
      }
    }
  };

  const isFormValid =
    formData.name.trim() &&
    formData.email.trim() &&
    /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(formData.email) &&
    formData.message.trim();

  return (
    <div className={styles.container}>
      <div className={styles.card}>
        {/* LEFT PANEL - INFO */}
        <div className={styles.left}>
          <h2>Li√™n h·ªá Hokori</h2>
          <ul className={styles.infoList}>
            <li>
              <span>Email h·ªó tr·ª£:</span>
              <p>contact.hokorivn@gmail.com</p>
            </li>
            <li>
              <span>Hotline:</span>
              <p>028 3868 5509</p>
              <p>028 3868 5507</p>
            </li>
            <li>
              <span>Th·ªùi gian l√†m vi·ªác:</span>
              <p>Th·ª© Hai ‚Äì Th·ª© S√°u: 8:30 ‚Äì 17:30</p>
            </li>
          </ul>
        </div>

        {/* RIGHT PANEL - FORM */}
        <div className={styles.right}>
          <h2>G·ª≠i l·ªùi nh·∫Øn ƒë·∫øn Hokori</h2>
          <p className={styles.desc}>
            N·∫øu b·∫°n c√≥ th·∫Øc m·∫Øc v·ªÅ{" "}
            <b>kh√≥a h·ªçc, l·ªô tr√¨nh JLPT, ho·∫∑c t√≠nh nƒÉng AI</b>, vui l√≤ng ƒëi·ªÅn
            th√¥ng tin b√™n d∆∞·ªõi. ƒê·ªôi ng≈© Hokori s·∫Ω ph·∫£n h·ªìi trong th·ªùi gian s·ªõm
            nh·∫•t.
          </p>

          <form className={styles.form} onSubmit={handleSubmit}>
            {/* NAME */}
            <div className={styles.formGroup}>
              <label>H·ªç v√† t√™n</label>
              <input
                type="text"
                name="name"
                placeholder="Nh·∫≠p h·ªç v√† t√™n c·ªßa b·∫°n"
                value={formData.name}
                onChange={handleChange}
                className={`${errors.name ? styles.inputError : ""}`}
              />
              {errors.name && (
                <span className={styles.errorMsg}>{errors.name}</span>
              )}
            </div>

            {/* EMAIL */}
            <div className={styles.formGroup}>
              <label>Email</label>
              <input
                type="email"
                name="email"
                placeholder="V√≠ d·ª•: tenban@gmail.com"
                value={formData.email}
                onChange={handleChange}
                className={`${errors.email ? styles.inputError : ""}`}
              />
              {errors.email && (
                <span className={styles.errorMsg}>{errors.email}</span>
              )}
            </div>

            {/* MESSAGE */}
            <div className={styles.formGroup}>
              <label>L·ªùi nh·∫Øn</label>
              <textarea
                name="message"
                placeholder="Nh·∫≠p n·ªôi dung l·ªùi nh·∫Øn..."
                rows="4"
                value={formData.message}
                onChange={handleChange}
                className={`${errors.message ? styles.inputError : ""}`}
              />
              {errors.message && (
                <span className={styles.errorMsg}>{errors.message}</span>
              )}
            </div>

            <Button
              content="G·ª≠i l·ªùi nh·∫Øn"
              type="submit"
              className={`${styles.submitButton} ${
                !isFormValid ? styles.disabled : ""
              }`}
              disabled={!isFormValid}
            />
          </form>
        </div>
      </div>
    </div>
  );
};
